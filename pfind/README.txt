I created a program called pfind that searches for files with specified permissions within a given directory. The program takes two arguments: a directory path and a permissions string, formatted similarly to how the ls command displays them (e.g., rwxrwxrwx). First, my program validates the permissions string to ensure it consists of the correct characters (r, w, x, and -) in the appropriate positions. If the string is invalid, it prints an error message and exits with EXIT_FAILURE. Once validated, my program recursively traverses the specified directory using opendir() and readdir(), and checks the permissions of each file with stat(). If a file's permissions match the specified string, the program prints the absolute path to that file. Only regular files are considered for matching, and the order of the output does not matter. This program handles various error scenarios appropriately, ensuring robust and reliable file searching based on user-defined permissions.